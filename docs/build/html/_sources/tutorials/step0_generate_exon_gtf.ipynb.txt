{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Exon-Level Reference GTF File Generation\n",
    "\n",
    "This guide explains how to generate an exon-level GTF reference file. This file is used to align scRNA-seq data to the exon level, allowing the extraction of exon read counts and junction read counts. The goal of the exon-level GTF is to ensure that exons within each gene are unique and do not overlap with one another.\n",
    "\n",
    "![This is an example image](./exon_gtf_demonstration.png)\n",
    "\n",
    "\n",
    "### **For Human GRCh38**\n",
    "You can directly download the pre-generated exon-level GTF file from [here](https://mcgill-my.sharepoint.com/my?id=%2Fpersonal%2Fkailu%5Fsong%5Fmail%5Fmcgill%5Fca%2FDocuments%2FDeepExonas%5Fgithub%5Fexample%2Falignment%5Ffiles).  \n",
    "\n",
    "### **For Other Species**\n",
    "1. First, download the reference GTF file from [here](https://www.ensembl.org/index.html).  \n",
    "\n",
    "2. Then, run this script to generate the exon-level GTF file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/mnt/md0/kailu/anaconda3/envs/DOLPHIN/lib/python3.10/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n",
      "  from .autonotebook import tqdm as notebook_tqdm\n"
     ]
    }
   ],
   "source": [
    "#import annotation file\n",
    "import pandas as pd\n",
    "from DOLPHIN import gtfpy\n",
    "import numpy as np\n",
    "import math\n",
    "\n",
    "pd.set_option('display.max_columns',500)\n",
    "pd.set_option('display.max_rows',100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#load the original ensembl gtf file\n",
    "df_gtf=gtfpy.readGTF(\"Homo_sapiens.GRCh38.107.gtf\")\n",
    "GTFpa=gtfpy.parseGTF(df_gtf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>seqname</th>\n",
       "      <th>source</th>\n",
       "      <th>feature</th>\n",
       "      <th>start</th>\n",
       "      <th>end</th>\n",
       "      <th>score</th>\n",
       "      <th>strand</th>\n",
       "      <th>frame</th>\n",
       "      <th>gene_id</th>\n",
       "      <th>protein_id</th>\n",
       "      <th>gene_source</th>\n",
       "      <th>exon_number</th>\n",
       "      <th>gene_biotype</th>\n",
       "      <th>transcript_version</th>\n",
       "      <th>transcript_support_level</th>\n",
       "      <th>exon_version</th>\n",
       "      <th>exon_id</th>\n",
       "      <th>transcript_source</th>\n",
       "      <th>transcript_name</th>\n",
       "      <th>gene_name</th>\n",
       "      <th>tag</th>\n",
       "      <th>ccds_id</th>\n",
       "      <th>transcript_biotype</th>\n",
       "      <th>transcript_id</th>\n",
       "      <th>protein_version</th>\n",
       "      <th>gene_version</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>gene</td>\n",
       "      <td>1471765</td>\n",
       "      <td>1497848</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000160072</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>NaN</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ATAD3B</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>transcript</td>\n",
       "      <td>1471765</td>\n",
       "      <td>1497848</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000160072</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>NaN</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>ATAD3B-206</td>\n",
       "      <td>ATAD3B</td>\n",
       "      <td>basic</td>\n",
       "      <td>CCDS30</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>ENST00000673477</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>1471765</td>\n",
       "      <td>1472089</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000160072</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>1</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>ENSE00003889014</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>ATAD3B-206</td>\n",
       "      <td>ATAD3B</td>\n",
       "      <td>basic</td>\n",
       "      <td>CCDS30</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>ENST00000673477</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>CDS</td>\n",
       "      <td>1471885</td>\n",
       "      <td>1472089</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>0</td>\n",
       "      <td>ENSG00000160072</td>\n",
       "      <td>ENSP00000500094</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>1</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>ATAD3B-206</td>\n",
       "      <td>ATAD3B</td>\n",
       "      <td>basic</td>\n",
       "      <td>CCDS30</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>ENST00000673477</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>start_codon</td>\n",
       "      <td>1471885</td>\n",
       "      <td>1471887</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>0</td>\n",
       "      <td>ENSG00000160072</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>1</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>ATAD3B-206</td>\n",
       "      <td>ATAD3B</td>\n",
       "      <td>basic</td>\n",
       "      <td>CCDS30</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>ENST00000673477</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3371239</th>\n",
       "      <td>KI270713.1</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>five_prime_utr</td>\n",
       "      <td>32373</td>\n",
       "      <td>32528</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000277475</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>1</td>\n",
       "      <td>NA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>basic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>ENST00000612315</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3371240</th>\n",
       "      <td>KI270713.1</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>three_prime_utr</td>\n",
       "      <td>31698</td>\n",
       "      <td>31841</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000277475</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>1</td>\n",
       "      <td>NA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>basic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>ENST00000612315</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3371241</th>\n",
       "      <td>KI270713.1</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>gene</td>\n",
       "      <td>21861</td>\n",
       "      <td>22024</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000275405</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>snRNA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3371242</th>\n",
       "      <td>KI270713.1</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>transcript</td>\n",
       "      <td>21861</td>\n",
       "      <td>22024</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000275405</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>snRNA</td>\n",
       "      <td>1</td>\n",
       "      <td>NA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>U1.26-201</td>\n",
       "      <td>U1</td>\n",
       "      <td>basic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>snRNA</td>\n",
       "      <td>ENST00000619109</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3371243</th>\n",
       "      <td>KI270713.1</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>exon</td>\n",
       "      <td>21861</td>\n",
       "      <td>22024</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000275405</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>1</td>\n",
       "      <td>snRNA</td>\n",
       "      <td>1</td>\n",
       "      <td>NA</td>\n",
       "      <td>1</td>\n",
       "      <td>ENSE00003747303</td>\n",
       "      <td>ensembl</td>\n",
       "      <td>U1.26-201</td>\n",
       "      <td>U1</td>\n",
       "      <td>basic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>snRNA</td>\n",
       "      <td>ENST00000619109</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3371244 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            seqname          source          feature    start      end score  \\\n",
       "0                 1  ensembl_havana             gene  1471765  1497848     .   \n",
       "1                 1  ensembl_havana       transcript  1471765  1497848     .   \n",
       "2                 1  ensembl_havana             exon  1471765  1472089     .   \n",
       "3                 1  ensembl_havana              CDS  1471885  1472089     .   \n",
       "4                 1  ensembl_havana      start_codon  1471885  1471887     .   \n",
       "...             ...             ...              ...      ...      ...   ...   \n",
       "3371239  KI270713.1         ensembl   five_prime_utr    32373    32528     .   \n",
       "3371240  KI270713.1         ensembl  three_prime_utr    31698    31841     .   \n",
       "3371241  KI270713.1         ensembl             gene    21861    22024     .   \n",
       "3371242  KI270713.1         ensembl       transcript    21861    22024     .   \n",
       "3371243  KI270713.1         ensembl             exon    21861    22024     .   \n",
       "\n",
       "        strand frame          gene_id       protein_id     gene_source  \\\n",
       "0            +     .  ENSG00000160072              NaN  ensembl_havana   \n",
       "1            +     .  ENSG00000160072              NaN  ensembl_havana   \n",
       "2            +     .  ENSG00000160072              NaN  ensembl_havana   \n",
       "3            +     0  ENSG00000160072  ENSP00000500094  ensembl_havana   \n",
       "4            +     0  ENSG00000160072              NaN  ensembl_havana   \n",
       "...        ...   ...              ...              ...             ...   \n",
       "3371239      -     .  ENSG00000277475              NaN         ensembl   \n",
       "3371240      -     .  ENSG00000277475              NaN         ensembl   \n",
       "3371241      -     .  ENSG00000275405              NaN         ensembl   \n",
       "3371242      -     .  ENSG00000275405              NaN         ensembl   \n",
       "3371243      -     .  ENSG00000275405              NaN         ensembl   \n",
       "\n",
       "        exon_number    gene_biotype transcript_version  \\\n",
       "0               NaN  protein_coding                NaN   \n",
       "1               NaN  protein_coding                  1   \n",
       "2                 1  protein_coding                  1   \n",
       "3                 1  protein_coding                  1   \n",
       "4                 1  protein_coding                  1   \n",
       "...             ...             ...                ...   \n",
       "3371239         NaN  protein_coding                  1   \n",
       "3371240         NaN  protein_coding                  1   \n",
       "3371241         NaN           snRNA                NaN   \n",
       "3371242         NaN           snRNA                  1   \n",
       "3371243           1           snRNA                  1   \n",
       "\n",
       "        transcript_support_level exon_version          exon_id  \\\n",
       "0                            NaN          NaN              NaN   \n",
       "1                            NaN          NaN              NaN   \n",
       "2                            NaN            1  ENSE00003889014   \n",
       "3                            NaN          NaN              NaN   \n",
       "4                            NaN          NaN              NaN   \n",
       "...                          ...          ...              ...   \n",
       "3371239                       NA          NaN              NaN   \n",
       "3371240                       NA          NaN              NaN   \n",
       "3371241                      NaN          NaN              NaN   \n",
       "3371242                       NA          NaN              NaN   \n",
       "3371243                       NA            1  ENSE00003747303   \n",
       "\n",
       "        transcript_source transcript_name gene_name    tag ccds_id  \\\n",
       "0                     NaN             NaN    ATAD3B    NaN     NaN   \n",
       "1          ensembl_havana      ATAD3B-206    ATAD3B  basic  CCDS30   \n",
       "2          ensembl_havana      ATAD3B-206    ATAD3B  basic  CCDS30   \n",
       "3          ensembl_havana      ATAD3B-206    ATAD3B  basic  CCDS30   \n",
       "4          ensembl_havana      ATAD3B-206    ATAD3B  basic  CCDS30   \n",
       "...                   ...             ...       ...    ...     ...   \n",
       "3371239           ensembl             NaN       NaN  basic     NaN   \n",
       "3371240           ensembl             NaN       NaN  basic     NaN   \n",
       "3371241               NaN             NaN        U1    NaN     NaN   \n",
       "3371242           ensembl       U1.26-201        U1  basic     NaN   \n",
       "3371243           ensembl       U1.26-201        U1  basic     NaN   \n",
       "\n",
       "        transcript_biotype    transcript_id protein_version gene_version  \n",
       "0                      NaN              NaN             NaN           20  \n",
       "1           protein_coding  ENST00000673477             NaN           20  \n",
       "2           protein_coding  ENST00000673477             NaN           20  \n",
       "3           protein_coding  ENST00000673477               1           20  \n",
       "4           protein_coding  ENST00000673477             NaN           20  \n",
       "...                    ...              ...             ...          ...  \n",
       "3371239     protein_coding  ENST00000612315             NaN            1  \n",
       "3371240     protein_coding  ENST00000612315             NaN            1  \n",
       "3371241                NaN              NaN             NaN            1  \n",
       "3371242              snRNA  ENST00000619109             NaN            1  \n",
       "3371243              snRNA  ENST00000619109             NaN            1  \n",
       "\n",
       "[3371244 rows x 26 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "GTFpa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# modify gtf file which only keep unique exon\n",
    "df_exon = GTFpa[(GTFpa[\"feature\"] == \"exon\")][['seqname', 'source','feature','start','end','score','strand','frame','gene_id','gene_version','gene_name','gene_source','gene_biotype','exon_number']]\n",
    "df_exon[[\"start\",\"end\"]] = df_exon[[\"start\",\"end\"]].apply(pd.to_numeric)\n",
    "df_exon=df_exon.sort_values(by=[\"seqname\", \"start\",\"end\"],ascending=[True,True,True])\n",
    "#1. remove duplicate exon within gene which has same start and end site.\n",
    "df_exon_nodup=df_exon.drop_duplicates(subset=[\"gene_id\",\"start\",\"end\"],keep=\"first\")\n",
    "df_exon_nodup.head(50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#2 get unique location for exon\n",
    "import math\n",
    "\n",
    "def exon_uniq(gene):\n",
    "    _df_exon=df_exon_nodup.loc[(df_exon_nodup[\"gene_id\"] == gene)].reset_index().copy()\n",
    "\n",
    "    # save the start/end sites in list\n",
    "    _exon = []\n",
    "    for i in range(_df_exon.shape[0]):\n",
    "        _exon.append([_df_exon.iloc[i][\"start\"],_df_exon.iloc[i][\"end\"]])\n",
    "    \n",
    "    #create a unique list to store unique location\n",
    "    _unq = []\n",
    "    _unq.append(_exon[0])\n",
    "\n",
    "    #get unique list of exon site:\n",
    "    for i in range(1,len(_exon)):\n",
    "        for j in range(0,len(_unq)):\n",
    "            if _exon[i][0] >= max(map(max, _unq)):\n",
    "                _unq.append(_exon[i])\n",
    "            else:\n",
    "                if (_unq[j][0] <= _exon[i][0] < _unq[j][1]) & (_exon[i][1] > _unq[j][1]):\n",
    "                    _unq[j][1] = _exon[i][1]\n",
    "\n",
    "    def unique(list1):\n",
    "        unique_list = []\n",
    "    \n",
    "        for x in list1:\n",
    "            if x not in unique_list:\n",
    "                unique_list.append(x)\n",
    "        return(unique_list)\n",
    "\n",
    "    _unq = unique(_unq)\n",
    "\n",
    "    #process the exon table to only keep unique exon location, double confirm if all the cases are considered.\n",
    "    for k in range(_df_exon.shape[0]):\n",
    "        for j in range(len(_unq)):\n",
    "            if ((_unq[j][0] <= _df_exon.iloc[k]['start']) & (_unq[j][1] >= _df_exon.iloc[k]['end'])):\n",
    "                _df_exon.at[k,'_start'] = _unq[j][0]\n",
    "                _df_exon.at[k,'_end'] = _unq[j][1]\n",
    "    \n",
    "    for i in range(_df_exon.shape[0]):\n",
    "        if math.isnan(_df_exon.iloc[i]['_start']) :\n",
    "            print(\"Attention: \" + _df_exon.iloc[i]['gene_id'] + \",Start=\" + str(_df_exon.iloc[i]['start']) + \",end=\" + str(_df_exon.iloc[i]['end']) + \" is not assigned value\")\n",
    "    \n",
    "    #only keep unique exon and clean the datasets\n",
    "    _df_exon_out=_df_exon.drop_duplicates(subset=[\"_start\",\"_end\"],keep=\"first\").copy()\n",
    "    _df_exon_out['start'] = _df_exon_out['_start']\n",
    "    _df_exon_out['end'] = _df_exon_out['_end']\n",
    "    \n",
    "    _df_exon_out[[\"start\",\"end\"]] = _df_exon_out[[\"start\",\"end\"]].astype('int')\n",
    "    _df_exon_out = _df_exon_out.drop(columns=[\"_start\",\"_end\"])\n",
    "\n",
    "    #recount exon number value\n",
    "    _df_exon_out = _df_exon_out.reset_index()\n",
    "    _df_exon_out['exon_number'] = _df_exon_out.index+1\n",
    "\n",
    "    return(_df_exon_out)\n",
    "\n",
    "#check function\n",
    "exon_uniq(\"ENSG00000160072\")\n",
    "exon_uniq(\"ENSG00000234396\")\n",
    "exon_uniq(\"ENSG00000223972\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Run genes in batches and save each DataFrame into a separate `.pkl` file. \n",
    "A new `.pkl` file will be created for every 10,000 genes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# get the unique exon location per gene\n",
    "gene_list = df_exon_nodup.gene_id.unique().tolist()\n",
    "saveNum = 10000\n",
    "list_of_df = list()\n",
    "#run gene in batch, save each df into a pkl file\n",
    "for j in range(0,int(len(gene_list)/saveNum)+1):\n",
    "    #initialize output dataframe\n",
    "    df_out = pd.DataFrame()\n",
    "    #get the unique gene_id list \n",
    "    for i in range(j*saveNum,j*saveNum+saveNum):\n",
    "        if i >= len(gene_list):\n",
    "            break\n",
    "        _temp = exon_uniq(gene_list[i])\n",
    "        df_out = pd.concat([df_out, _temp], ignore_index=True)\n",
    "        print(gene_list[i])\n",
    "    list_of_df.append(df_out)\n",
    "    df_out.to_pickle(\"df_exon_gtf_\"+str(j)+\".pkl\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "pkl_files = [file for file in os.listdir('.') if file.startswith('df_exon_gtf_') and file.endswith('.pkl')]\n",
    "\n",
    "dataframes = [pd.read_pickle(file) for file in pkl_files]\n",
    "gtf_all = pd.concat(dataframes, ignore_index=True)\n",
    "\n",
    "# Check the result\n",
    "print(f\"Successfully combined {len(pkl_files)} files into a single DataFrame.\")\n",
    "print(gtf_all.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#check df_out has identitcal locations\n",
    "_ck_out = gtf_all\n",
    "# _ck_out = df_out.copy()\n",
    "_ck_out['_next_start'] = _ck_out.groupby('gene_id')['start'].shift(-1)\n",
    "_ck_out['_ck'] = \"\"\n",
    "for i in range(_ck_out.shape[0]):\n",
    "    if math.isnan(_ck_out['_next_start'][i]):\n",
    "        _ck_out[\"_ck\"][i] = True\n",
    "    else:\n",
    "        _ck_out[\"_ck\"][i] = _ck_out['_next_start'][i] >= _ck_out['end'][i]\n",
    "    \n",
    "_ck_out = _ck_out[(_ck_out[\"_ck\"] == False)]\n",
    "_ck_out"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>seqname</th>\n",
       "      <th>source</th>\n",
       "      <th>feature</th>\n",
       "      <th>start</th>\n",
       "      <th>end</th>\n",
       "      <th>score</th>\n",
       "      <th>strand</th>\n",
       "      <th>frame</th>\n",
       "      <th>gene_id</th>\n",
       "      <th>gene_version</th>\n",
       "      <th>gene_name</th>\n",
       "      <th>gene_source</th>\n",
       "      <th>gene_biotype</th>\n",
       "      <th>exon_number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6939</th>\n",
       "      <td>1</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>169849631</td>\n",
       "      <td>169853772</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000000457</td>\n",
       "      <td>14</td>\n",
       "      <td>SCYL3</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6940</th>\n",
       "      <td>1</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>169854270</td>\n",
       "      <td>169854964</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000000457</td>\n",
       "      <td>14</td>\n",
       "      <td>SCYL3</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6941</th>\n",
       "      <td>1</td>\n",
       "      <td>havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>169855796</td>\n",
       "      <td>169855957</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000000457</td>\n",
       "      <td>14</td>\n",
       "      <td>SCYL3</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6942</th>\n",
       "      <td>1</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>169859041</td>\n",
       "      <td>169859212</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000000457</td>\n",
       "      <td>14</td>\n",
       "      <td>SCYL3</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6943</th>\n",
       "      <td>1</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>169862613</td>\n",
       "      <td>169862797</td>\n",
       "      <td>.</td>\n",
       "      <td>-</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000000457</td>\n",
       "      <td>14</td>\n",
       "      <td>SCYL3</td>\n",
       "      <td>ensembl_havana</td>\n",
       "      <td>protein_coding</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341415</th>\n",
       "      <td>Y</td>\n",
       "      <td>havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>21250550</td>\n",
       "      <td>21250708</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000289707</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>havana</td>\n",
       "      <td>lncRNA</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341416</th>\n",
       "      <td>Y</td>\n",
       "      <td>havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>21253123</td>\n",
       "      <td>21253193</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000289707</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>havana</td>\n",
       "      <td>lncRNA</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341417</th>\n",
       "      <td>Y</td>\n",
       "      <td>havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>21255420</td>\n",
       "      <td>21257832</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000289707</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>havana</td>\n",
       "      <td>lncRNA</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341902</th>\n",
       "      <td>Y</td>\n",
       "      <td>havana_tagene</td>\n",
       "      <td>exon</td>\n",
       "      <td>7274826</td>\n",
       "      <td>7275065</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000289826</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>havana_tagene</td>\n",
       "      <td>lncRNA</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341903</th>\n",
       "      <td>Y</td>\n",
       "      <td>havana_tagene</td>\n",
       "      <td>exon</td>\n",
       "      <td>7290515</td>\n",
       "      <td>7290751</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000289826</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>havana_tagene</td>\n",
       "      <td>lncRNA</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>354393 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       seqname          source feature      start        end score strand  \\\n",
       "6939         1  ensembl_havana    exon  169849631  169853772     .      -   \n",
       "6940         1  ensembl_havana    exon  169854270  169854964     .      -   \n",
       "6941         1          havana    exon  169855796  169855957     .      -   \n",
       "6942         1  ensembl_havana    exon  169859041  169859212     .      -   \n",
       "6943         1  ensembl_havana    exon  169862613  169862797     .      -   \n",
       "...        ...             ...     ...        ...        ...   ...    ...   \n",
       "341415       Y          havana    exon   21250550   21250708     .      +   \n",
       "341416       Y          havana    exon   21253123   21253193     .      +   \n",
       "341417       Y          havana    exon   21255420   21257832     .      +   \n",
       "341902       Y   havana_tagene    exon    7274826    7275065     .      +   \n",
       "341903       Y   havana_tagene    exon    7290515    7290751     .      +   \n",
       "\n",
       "       frame          gene_id gene_version gene_name     gene_source  \\\n",
       "6939       .  ENSG00000000457           14     SCYL3  ensembl_havana   \n",
       "6940       .  ENSG00000000457           14     SCYL3  ensembl_havana   \n",
       "6941       .  ENSG00000000457           14     SCYL3  ensembl_havana   \n",
       "6942       .  ENSG00000000457           14     SCYL3  ensembl_havana   \n",
       "6943       .  ENSG00000000457           14     SCYL3  ensembl_havana   \n",
       "...      ...              ...          ...       ...             ...   \n",
       "341415     .  ENSG00000289707            1       NaN          havana   \n",
       "341416     .  ENSG00000289707            1       NaN          havana   \n",
       "341417     .  ENSG00000289707            1       NaN          havana   \n",
       "341902     .  ENSG00000289826            1       NaN   havana_tagene   \n",
       "341903     .  ENSG00000289826            1       NaN   havana_tagene   \n",
       "\n",
       "          gene_biotype  exon_number  \n",
       "6939    protein_coding            1  \n",
       "6940    protein_coding            2  \n",
       "6941    protein_coding            3  \n",
       "6942    protein_coding            4  \n",
       "6943    protein_coding            5  \n",
       "...                ...          ...  \n",
       "341415          lncRNA            8  \n",
       "341416          lncRNA            9  \n",
       "341417          lncRNA           10  \n",
       "341902          lncRNA            1  \n",
       "341903          lncRNA            2  \n",
       "\n",
       "[354393 rows x 14 columns]"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "gtf_all = gtf_all.drop(columns=['level_0','index'])\n",
    "gtf_all=gtf_all.sort_values(by=[\"seqname\", \"gene_id\", \"start\", \"end\"],ascending=[True,True,True,True])\n",
    "gtf_all"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>seqname</th>\n",
       "      <th>source</th>\n",
       "      <th>feature</th>\n",
       "      <th>start</th>\n",
       "      <th>end</th>\n",
       "      <th>score</th>\n",
       "      <th>strand</th>\n",
       "      <th>frame</th>\n",
       "      <th>gene_id</th>\n",
       "      <th>gene_version</th>\n",
       "      <th>gene_name</th>\n",
       "      <th>gene_source</th>\n",
       "      <th>gene_biotype</th>\n",
       "      <th>exon_number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20024</th>\n",
       "      <td>1</td>\n",
       "      <td>havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>11869</td>\n",
       "      <td>12227</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000223972</td>\n",
       "      <td>5</td>\n",
       "      <td>DDX11L1</td>\n",
       "      <td>havana</td>\n",
       "      <td>transcribed_unprocessed_pseudogene</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20025</th>\n",
       "      <td>1</td>\n",
       "      <td>havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>12613</td>\n",
       "      <td>12721</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000223972</td>\n",
       "      <td>5</td>\n",
       "      <td>DDX11L1</td>\n",
       "      <td>havana</td>\n",
       "      <td>transcribed_unprocessed_pseudogene</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20026</th>\n",
       "      <td>1</td>\n",
       "      <td>havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>12975</td>\n",
       "      <td>13052</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000223972</td>\n",
       "      <td>5</td>\n",
       "      <td>DDX11L1</td>\n",
       "      <td>havana</td>\n",
       "      <td>transcribed_unprocessed_pseudogene</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20027</th>\n",
       "      <td>1</td>\n",
       "      <td>havana</td>\n",
       "      <td>exon</td>\n",
       "      <td>13221</td>\n",
       "      <td>14409</td>\n",
       "      <td>.</td>\n",
       "      <td>+</td>\n",
       "      <td>.</td>\n",
       "      <td>ENSG00000223972</td>\n",
       "      <td>5</td>\n",
       "      <td>DDX11L1</td>\n",
       "      <td>havana</td>\n",
       "      <td>transcribed_unprocessed_pseudogene</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      seqname  source feature  start    end score strand frame  \\\n",
       "20024       1  havana    exon  11869  12227     .      +     .   \n",
       "20025       1  havana    exon  12613  12721     .      +     .   \n",
       "20026       1  havana    exon  12975  13052     .      +     .   \n",
       "20027       1  havana    exon  13221  14409     .      +     .   \n",
       "\n",
       "               gene_id gene_version gene_name gene_source  \\\n",
       "20024  ENSG00000223972            5   DDX11L1      havana   \n",
       "20025  ENSG00000223972            5   DDX11L1      havana   \n",
       "20026  ENSG00000223972            5   DDX11L1      havana   \n",
       "20027  ENSG00000223972            5   DDX11L1      havana   \n",
       "\n",
       "                             gene_biotype  exon_number  \n",
       "20024  transcribed_unprocessed_pseudogene            1  \n",
       "20025  transcribed_unprocessed_pseudogene            2  \n",
       "20026  transcribed_unprocessed_pseudogene            3  \n",
       "20027  transcribed_unprocessed_pseudogene            4  "
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#manual check\n",
    "gtf_all[(gtf_all[\"gene_id\"] == \"ENSG00000223972\")]\n",
    "GTFpa[(GTFpa[\"gene_id\"] == \"ENSG00000223972\") & (GTFpa[\"feature\"] == \"exon\")]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#output to gtf file and pickle file\n",
    "gtfpy.writeGTF(gtf_all,\"Homo_sapiens.GRCh38.107.exon.gtf\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Convert to `gtf.pkl` File for Fast Loading in Step 2\n",
    "df_mod_gtf=gtfpy.parseGTF(gtfpy.readGTF(\"Homo_sapiens.GRCh38.107.exon.gtf\"))\n",
    "df_mod_gtf.to_pickle(\"gtf.pkl\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "DOLPHIN",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.15"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
